
//! Autogenerated weights for `democracy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
<<<<<<< HEAD
//! DATE: 2022-07-27, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
=======
//! DATE: 2022-07-15, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
>>>>>>> instrumental-duplicate-for-pablo
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("picasso-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/composable
// benchmark
// pallet
// --chain=picasso-dev
// --execution=wasm
// --wasm-execution=compiled
// --wasm-instantiation-strategy=legacy-instance-reuse
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=20
// --output=runtime/picasso/src/weights
// --log
// error

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `democracy`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> democracy::WeightInfo for WeightInfo<T> {
	// Storage: Democracy PublicPropCount (r:1 w:1)
	// Storage: Democracy PublicProps (r:1 w:1)
	// Storage: Democracy Blacklist (r:1 w:0)
	// Storage: Democracy DepositOf (r:0 w:1)
	fn propose() -> Weight {
<<<<<<< HEAD
		(98_784_000 as Weight)
=======
		(94_563_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy DepositOf (r:1 w:1)
	fn second(s: u32, ) -> Weight {
<<<<<<< HEAD
		(60_043_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((264_000 as Weight).saturating_mul(s as Weight))
=======
		(59_562_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((228_000 as Weight).saturating_mul(s as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy VotingOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	fn vote_new(r: u32, ) -> Weight {
<<<<<<< HEAD
		(74_274_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((350_000 as Weight).saturating_mul(r as Weight))
=======
		(73_947_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((309_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy VotingOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	fn vote_existing(r: u32, ) -> Weight {
<<<<<<< HEAD
		(75_255_000 as Weight)
			// Standard Error: 7_000
			.saturating_add((347_000 as Weight).saturating_mul(r as Weight))
=======
		(74_187_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((298_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy Cancellations (r:1 w:1)
	fn emergency_cancel() -> Weight {
<<<<<<< HEAD
		(34_560_000 as Weight)
=======
		(34_815_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Democracy PublicProps (r:1 w:1)
	// Storage: Democracy NextExternal (r:1 w:1)
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy Blacklist (r:0 w:1)
	// Storage: Democracy DepositOf (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn blacklist(p: u32, ) -> Weight {
<<<<<<< HEAD
		(112_280_000 as Weight)
			// Standard Error: 38_000
			.saturating_add((888_000 as Weight).saturating_mul(p as Weight))
=======
		(114_320_000 as Weight)
			// Standard Error: 9_000
			.saturating_add((594_000 as Weight).saturating_mul(p as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
	// Storage: Democracy NextExternal (r:1 w:1)
	// Storage: Democracy Blacklist (r:1 w:0)
	fn external_propose(v: u32, ) -> Weight {
<<<<<<< HEAD
		(17_427_000 as Weight)
			// Standard Error: 0
			.saturating_add((54_000 as Weight).saturating_mul(v as Weight))
=======
		(16_626_000 as Weight)
			// Standard Error: 0
			.saturating_add((67_000 as Weight).saturating_mul(v as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy NextExternal (r:0 w:1)
	fn external_propose_majority() -> Weight {
<<<<<<< HEAD
		(3_287_000 as Weight)
=======
		(3_055_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy NextExternal (r:0 w:1)
	fn external_propose_default() -> Weight {
<<<<<<< HEAD
		(3_388_000 as Weight)
=======
		(3_079_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy NextExternal (r:1 w:1)
	// Storage: Democracy ReferendumCount (r:1 w:1)
	// Storage: Democracy ReferendumInfoOf (r:0 w:1)
	fn fast_track() -> Weight {
<<<<<<< HEAD
		(36_128_000 as Weight)
=======
		(35_267_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy NextExternal (r:1 w:1)
	// Storage: Democracy Blacklist (r:1 w:1)
	fn veto_external(v: u32, ) -> Weight {
<<<<<<< HEAD
		(38_292_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((77_000 as Weight).saturating_mul(v as Weight))
=======
		(37_301_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((85_000 as Weight).saturating_mul(v as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Democracy PublicProps (r:1 w:1)
	// Storage: Democracy DepositOf (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn cancel_proposal(p: u32, ) -> Weight {
<<<<<<< HEAD
		(85_834_000 as Weight)
			// Standard Error: 6_000
			.saturating_add((599_000 as Weight).saturating_mul(p as Weight))
=======
		(84_216_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((541_000 as Weight).saturating_mul(p as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:0 w:1)
	fn cancel_referendum() -> Weight {
<<<<<<< HEAD
		(22_653_000 as Weight)
=======
		(22_193_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Scheduler Lookup (r:1 w:1)
	// Storage: Scheduler Agenda (r:1 w:1)
	fn cancel_queued(r: u32, ) -> Weight {
<<<<<<< HEAD
		(42_418_000 as Weight)
			// Standard Error: 6_000
			.saturating_add((3_149_000 as Weight).saturating_mul(r as Weight))
=======
		(43_230_000 as Weight)
			// Standard Error: 5_000
			.saturating_add((3_060_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Democracy LowestUnbaked (r:1 w:1)
	// Storage: Democracy ReferendumCount (r:1 w:0)
	// Storage: Democracy ReferendumInfoOf (r:1 w:0)
	fn on_initialize_base(r: u32, ) -> Weight {
<<<<<<< HEAD
		(7_913_000 as Weight)
			// Standard Error: 7_000
			.saturating_add((6_869_000 as Weight).saturating_mul(r as Weight))
=======
		(7_943_000 as Weight)
			// Standard Error: 6_000
			.saturating_add((6_808_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy LowestUnbaked (r:1 w:1)
	// Storage: Democracy ReferendumCount (r:1 w:0)
	// Storage: Democracy LastTabledWasExternal (r:1 w:0)
	// Storage: Democracy NextExternal (r:1 w:0)
	// Storage: Democracy PublicProps (r:1 w:0)
	// Storage: Democracy ReferendumInfoOf (r:1 w:0)
	fn on_initialize_base_with_launch_period(r: u32, ) -> Weight {
<<<<<<< HEAD
		(16_163_000 as Weight)
			// Standard Error: 7_000
			.saturating_add((6_918_000 as Weight).saturating_mul(r as Weight))
=======
		(17_998_000 as Weight)
			// Standard Error: 6_000
			.saturating_add((6_822_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy VotingOf (r:3 w:3)
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	fn delegate(r: u32, ) -> Weight {
<<<<<<< HEAD
		(68_631_000 as Weight)
			// Standard Error: 13_000
			.saturating_add((9_136_000 as Weight).saturating_mul(r as Weight))
=======
		(71_092_000 as Weight)
			// Standard Error: 8_000
			.saturating_add((8_972_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	// Storage: Democracy VotingOf (r:2 w:2)
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	fn undelegate(r: u32, ) -> Weight {
<<<<<<< HEAD
		(31_738_000 as Weight)
			// Standard Error: 10_000
			.saturating_add((9_156_000 as Weight).saturating_mul(r as Weight))
=======
		(32_565_000 as Weight)
			// Standard Error: 11_000
			.saturating_add((9_128_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	// Storage: Democracy PublicProps (r:0 w:1)
	fn clear_public_proposals() -> Weight {
<<<<<<< HEAD
		(4_047_000 as Weight)
=======
		(4_435_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy Preimages (r:1 w:1)
	fn note_preimage(b: u32, ) -> Weight {
<<<<<<< HEAD
		(54_012_000 as Weight)
=======
		(53_681_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			// Standard Error: 0
			.saturating_add((3_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy Preimages (r:1 w:1)
	fn note_imminent_preimage(b: u32, ) -> Weight {
<<<<<<< HEAD
		(35_977_000 as Weight)
=======
		(35_627_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			// Standard Error: 0
			.saturating_add((3_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy Preimages (r:1 w:1)
	// Storage: System Account (r:1 w:0)
	fn reap_preimage(b: u32, ) -> Weight {
<<<<<<< HEAD
		(52_999_000 as Weight)
=======
		(52_467_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			// Standard Error: 0
			.saturating_add((2_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy VotingOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn unlock_remove(r: u32, ) -> Weight {
<<<<<<< HEAD
		(49_665_000 as Weight)
			// Standard Error: 5_000
			.saturating_add((130_000 as Weight).saturating_mul(r as Weight))
=======
		(47_704_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((146_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy VotingOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn unlock_set(r: u32, ) -> Weight {
<<<<<<< HEAD
		(45_073_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((330_000 as Weight).saturating_mul(r as Weight))
=======
		(41_181_000 as Weight)
			// Standard Error: 14_000
			.saturating_add((418_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy VotingOf (r:1 w:1)
	fn remove_vote(r: u32, ) -> Weight {
<<<<<<< HEAD
		(27_479_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((243_000 as Weight).saturating_mul(r as Weight))
=======
		(26_505_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((235_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy VotingOf (r:1 w:1)
	fn remove_other_vote(r: u32, ) -> Weight {
<<<<<<< HEAD
		(27_224_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((255_000 as Weight).saturating_mul(r as Weight))
=======
		(26_500_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((230_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}
