
//! Autogenerated weights for `democracy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
<<<<<<< HEAD
//! DATE: 2022-07-27, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
=======
//! DATE: 2022-07-15, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
>>>>>>> instrumental-duplicate-for-pablo
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dali-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/composable
// benchmark
// pallet
// --chain=dali-dev
// --execution=wasm
// --wasm-execution=compiled
// --wasm-instantiation-strategy=legacy-instance-reuse
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=20
// --output=runtime/dali/src/weights
// --log
// error

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `democracy`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> democracy::WeightInfo for WeightInfo<T> {
	// Storage: Democracy PublicPropCount (r:1 w:1)
	// Storage: Democracy PublicProps (r:1 w:1)
	// Storage: Democracy Blacklist (r:1 w:0)
	// Storage: Democracy DepositOf (r:0 w:1)
	fn propose() -> Weight {
<<<<<<< HEAD
		(97_523_000 as Weight)
=======
		(96_551_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy DepositOf (r:1 w:1)
	fn second(s: u32, ) -> Weight {
<<<<<<< HEAD
		(61_117_000 as Weight)
			// Standard Error: 8_000
			.saturating_add((274_000 as Weight).saturating_mul(s as Weight))
=======
		(59_862_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((250_000 as Weight).saturating_mul(s as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy VotingOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	fn vote_new(r: u32, ) -> Weight {
<<<<<<< HEAD
		(74_651_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((370_000 as Weight).saturating_mul(r as Weight))
=======
		(74_997_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((312_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy VotingOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	fn vote_existing(r: u32, ) -> Weight {
<<<<<<< HEAD
		(75_377_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((358_000 as Weight).saturating_mul(r as Weight))
=======
		(74_217_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((323_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy Cancellations (r:1 w:1)
	fn emergency_cancel() -> Weight {
<<<<<<< HEAD
		(38_084_000 as Weight)
=======
		(34_565_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Democracy PublicProps (r:1 w:1)
	// Storage: Democracy NextExternal (r:1 w:1)
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy Blacklist (r:0 w:1)
	// Storage: Democracy DepositOf (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn blacklist(p: u32, ) -> Weight {
<<<<<<< HEAD
		(117_345_000 as Weight)
			// Standard Error: 9_000
			.saturating_add((623_000 as Weight).saturating_mul(p as Weight))
=======
		(113_667_000 as Weight)
			// Standard Error: 8_000
			.saturating_add((545_000 as Weight).saturating_mul(p as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
	// Storage: Democracy NextExternal (r:1 w:1)
	// Storage: Democracy Blacklist (r:1 w:0)
	fn external_propose(v: u32, ) -> Weight {
<<<<<<< HEAD
		(17_920_000 as Weight)
			// Standard Error: 0
			.saturating_add((51_000 as Weight).saturating_mul(v as Weight))
=======
		(17_178_000 as Weight)
			// Standard Error: 0
			.saturating_add((49_000 as Weight).saturating_mul(v as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy NextExternal (r:0 w:1)
	fn external_propose_majority() -> Weight {
<<<<<<< HEAD
		(3_534_000 as Weight)
=======
		(3_223_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy NextExternal (r:0 w:1)
	fn external_propose_default() -> Weight {
<<<<<<< HEAD
		(3_607_000 as Weight)
=======
		(3_396_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy NextExternal (r:1 w:1)
	// Storage: Democracy ReferendumCount (r:1 w:1)
	// Storage: Democracy ReferendumInfoOf (r:0 w:1)
	fn fast_track() -> Weight {
<<<<<<< HEAD
		(36_442_000 as Weight)
=======
		(36_396_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy NextExternal (r:1 w:1)
	// Storage: Democracy Blacklist (r:1 w:1)
	fn veto_external(v: u32, ) -> Weight {
<<<<<<< HEAD
		(38_034_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((82_000 as Weight).saturating_mul(v as Weight))
=======
		(37_880_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((90_000 as Weight).saturating_mul(v as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Democracy PublicProps (r:1 w:1)
	// Storage: Democracy DepositOf (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn cancel_proposal(p: u32, ) -> Weight {
<<<<<<< HEAD
		(86_834_000 as Weight)
			// Standard Error: 5_000
			.saturating_add((581_000 as Weight).saturating_mul(p as Weight))
=======
		(84_792_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((477_000 as Weight).saturating_mul(p as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:0 w:1)
	fn cancel_referendum() -> Weight {
<<<<<<< HEAD
		(23_341_000 as Weight)
=======
		(22_892_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Scheduler Lookup (r:1 w:1)
	// Storage: Scheduler Agenda (r:1 w:1)
	fn cancel_queued(r: u32, ) -> Weight {
<<<<<<< HEAD
		(44_035_000 as Weight)
			// Standard Error: 7_000
			.saturating_add((3_103_000 as Weight).saturating_mul(r as Weight))
=======
		(44_085_000 as Weight)
			// Standard Error: 5_000
			.saturating_add((2_947_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Democracy LowestUnbaked (r:1 w:1)
	// Storage: Democracy ReferendumCount (r:1 w:0)
	// Storage: Democracy ReferendumInfoOf (r:1 w:0)
	fn on_initialize_base(r: u32, ) -> Weight {
<<<<<<< HEAD
		(4_747_000 as Weight)
			// Standard Error: 7_000
			.saturating_add((7_094_000 as Weight).saturating_mul(r as Weight))
=======
		(5_645_000 as Weight)
			// Standard Error: 6_000
			.saturating_add((6_995_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy LowestUnbaked (r:1 w:1)
	// Storage: Democracy ReferendumCount (r:1 w:0)
	// Storage: Democracy LastTabledWasExternal (r:1 w:0)
	// Storage: Democracy NextExternal (r:1 w:0)
	// Storage: Democracy PublicProps (r:1 w:0)
	// Storage: Democracy ReferendumInfoOf (r:1 w:0)
	fn on_initialize_base_with_launch_period(r: u32, ) -> Weight {
<<<<<<< HEAD
		(14_702_000 as Weight)
			// Standard Error: 8_000
			.saturating_add((7_135_000 as Weight).saturating_mul(r as Weight))
=======
		(16_700_000 as Weight)
			// Standard Error: 6_000
			.saturating_add((7_009_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy VotingOf (r:3 w:3)
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	fn delegate(r: u32, ) -> Weight {
<<<<<<< HEAD
		(73_009_000 as Weight)
			// Standard Error: 11_000
			.saturating_add((9_195_000 as Weight).saturating_mul(r as Weight))
=======
		(70_286_000 as Weight)
			// Standard Error: 9_000
			.saturating_add((9_069_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	// Storage: Democracy VotingOf (r:2 w:2)
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	fn undelegate(r: u32, ) -> Weight {
<<<<<<< HEAD
		(33_943_000 as Weight)
			// Standard Error: 11_000
			.saturating_add((9_193_000 as Weight).saturating_mul(r as Weight))
=======
		(32_649_000 as Weight)
			// Standard Error: 8_000
			.saturating_add((9_091_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	// Storage: Democracy PublicProps (r:0 w:1)
	fn clear_public_proposals() -> Weight {
<<<<<<< HEAD
		(4_017_000 as Weight)
=======
		(3_847_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy Preimages (r:1 w:1)
	fn note_preimage(b: u32, ) -> Weight {
<<<<<<< HEAD
		(56_488_000 as Weight)
=======
		(54_257_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			// Standard Error: 0
			.saturating_add((3_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy Preimages (r:1 w:1)
	fn note_imminent_preimage(b: u32, ) -> Weight {
<<<<<<< HEAD
		(35_732_000 as Weight)
=======
		(36_096_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			// Standard Error: 0
			.saturating_add((3_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy Preimages (r:1 w:1)
	// Storage: System Account (r:1 w:0)
	fn reap_preimage(b: u32, ) -> Weight {
<<<<<<< HEAD
		(53_132_000 as Weight)
=======
		(52_452_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy VotingOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn unlock_remove(r: u32, ) -> Weight {
<<<<<<< HEAD
		(49_361_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((150_000 as Weight).saturating_mul(r as Weight))
=======
		(48_999_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((118_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy VotingOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn unlock_set(r: u32, ) -> Weight {
<<<<<<< HEAD
		(45_088_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((333_000 as Weight).saturating_mul(r as Weight))
=======
		(66_015_000 as Weight)
			// Standard Error: 19_000
			.saturating_add((32_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy VotingOf (r:1 w:1)
	fn remove_vote(r: u32, ) -> Weight {
<<<<<<< HEAD
		(28_268_000 as Weight)
			// Standard Error: 13_000
			.saturating_add((315_000 as Weight).saturating_mul(r as Weight))
=======
		(27_359_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((229_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy VotingOf (r:1 w:1)
	fn remove_other_vote(r: u32, ) -> Weight {
<<<<<<< HEAD
		(26_741_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((281_000 as Weight).saturating_mul(r as Weight))
=======
		(25_909_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((273_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}
