
//! Autogenerated weights for `identity`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
<<<<<<< HEAD
//! DATE: 2022-07-28, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
=======
//! DATE: 2022-07-15, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
>>>>>>> instrumental-duplicate-for-pablo
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dali-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/composable
// benchmark
// pallet
// --chain=dali-dev
// --execution=wasm
// --wasm-execution=compiled
// --wasm-instantiation-strategy=legacy-instance-reuse
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=20
// --output=runtime/dali/src/weights
// --log
// error

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `identity`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> identity::WeightInfo for WeightInfo<T> {
	// Storage: Identity Registrars (r:1 w:1)
	fn add_registrar(r: u32, ) -> Weight {
<<<<<<< HEAD
		(28_710_000 as Weight)
			// Standard Error: 88_000
			.saturating_add((591_000 as Weight).saturating_mul(r as Weight))
=======
		(27_367_000 as Weight)
			// Standard Error: 108_000
			.saturating_add((992_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Identity IdentityOf (r:1 w:1)
	fn set_identity(r: u32, x: u32, ) -> Weight {
<<<<<<< HEAD
		(59_291_000 as Weight)
			// Standard Error: 167_000
			.saturating_add((1_127_000 as Weight).saturating_mul(r as Weight))
			// Standard Error: 28_000
			.saturating_add((983_000 as Weight).saturating_mul(x as Weight))
=======
		(64_045_000 as Weight)
			// Standard Error: 138_000
			.saturating_add((368_000 as Weight).saturating_mul(r as Weight))
			// Standard Error: 23_000
			.saturating_add((966_000 as Weight).saturating_mul(x as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Identity IdentityOf (r:1 w:0)
	// Storage: Identity SubsOf (r:1 w:1)
	// Storage: Identity SuperOf (r:1 w:1)
	fn set_subs_new(s: u32, ) -> Weight {
<<<<<<< HEAD
		(57_197_000 as Weight)
			// Standard Error: 146_000
			.saturating_add((7_448_000 as Weight).saturating_mul(s as Weight))
=======
		(52_090_000 as Weight)
			// Standard Error: 17_000
			.saturating_add((7_294_000 as Weight).saturating_mul(s as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(s as Weight)))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(s as Weight)))
	}
	// Storage: Identity IdentityOf (r:1 w:0)
	// Storage: Identity SubsOf (r:1 w:1)
	// Storage: Identity SuperOf (r:0 w:1)
	fn set_subs_old(p: u32, ) -> Weight {
<<<<<<< HEAD
		(55_139_000 as Weight)
			// Standard Error: 22_000
			.saturating_add((2_225_000 as Weight).saturating_mul(p as Weight))
=======
		(51_769_000 as Weight)
			// Standard Error: 9_000
			.saturating_add((2_380_000 as Weight).saturating_mul(p as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(p as Weight)))
	}
	// Storage: Identity SubsOf (r:1 w:1)
	// Storage: Identity IdentityOf (r:1 w:1)
	// Storage: Identity SuperOf (r:0 w:32)
<<<<<<< HEAD
	fn clear_identity(r: u32, s: u32, x: u32, ) -> Weight {
		(65_625_000 as Weight)
			// Standard Error: 112_000
			.saturating_add((431_000 as Weight).saturating_mul(r as Weight))
			// Standard Error: 17_000
			.saturating_add((2_274_000 as Weight).saturating_mul(s as Weight))
			// Standard Error: 17_000
			.saturating_add((516_000 as Weight).saturating_mul(x as Weight))
=======
	fn clear_identity(_r: u32, s: u32, x: u32, ) -> Weight {
		(72_677_000 as Weight)
			// Standard Error: 11_000
			.saturating_add((2_266_000 as Weight).saturating_mul(s as Weight))
			// Standard Error: 11_000
			.saturating_add((491_000 as Weight).saturating_mul(x as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(s as Weight)))
	}
	// Storage: Identity Registrars (r:1 w:0)
	// Storage: Identity IdentityOf (r:1 w:1)
	fn request_judgement(r: u32, x: u32, ) -> Weight {
<<<<<<< HEAD
		(66_282_000 as Weight)
			// Standard Error: 74_000
			.saturating_add((599_000 as Weight).saturating_mul(r as Weight))
			// Standard Error: 12_000
			.saturating_add((1_001_000 as Weight).saturating_mul(x as Weight))
=======
		(63_990_000 as Weight)
			// Standard Error: 68_000
			.saturating_add((862_000 as Weight).saturating_mul(r as Weight))
			// Standard Error: 11_000
			.saturating_add((1_036_000 as Weight).saturating_mul(x as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Identity IdentityOf (r:1 w:1)
<<<<<<< HEAD
	fn cancel_request(_r: u32, x: u32, ) -> Weight {
		(73_200_000 as Weight)
			// Standard Error: 46_000
			.saturating_add((800_000 as Weight).saturating_mul(x as Weight))
=======
	fn cancel_request(r: u32, x: u32, ) -> Weight {
		(61_854_000 as Weight)
			// Standard Error: 68_000
			.saturating_add((409_000 as Weight).saturating_mul(r as Weight))
			// Standard Error: 11_000
			.saturating_add((1_018_000 as Weight).saturating_mul(x as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Identity Registrars (r:1 w:1)
	fn set_fee(r: u32, ) -> Weight {
<<<<<<< HEAD
		(10_244_000 as Weight)
			// Standard Error: 56_000
			.saturating_add((484_000 as Weight).saturating_mul(r as Weight))
=======
		(10_493_000 as Weight)
			// Standard Error: 14_000
			.saturating_add((373_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Identity Registrars (r:1 w:1)
	fn set_account_id(r: u32, ) -> Weight {
<<<<<<< HEAD
		(11_299_000 as Weight)
			// Standard Error: 30_000
			.saturating_add((306_000 as Weight).saturating_mul(r as Weight))
=======
		(10_241_000 as Weight)
			// Standard Error: 67_000
			.saturating_add((658_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Identity Registrars (r:1 w:1)
	fn set_fields(r: u32, ) -> Weight {
<<<<<<< HEAD
		(12_406_000 as Weight)
			// Standard Error: 27_000
			.saturating_add((97_000 as Weight).saturating_mul(r as Weight))
=======
		(10_388_000 as Weight)
			// Standard Error: 12_000
			.saturating_add((388_000 as Weight).saturating_mul(r as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Identity Registrars (r:1 w:0)
	// Storage: Identity IdentityOf (r:1 w:1)
	fn provide_judgement(r: u32, x: u32, ) -> Weight {
<<<<<<< HEAD
		(45_575_000 as Weight)
			// Standard Error: 79_000
			.saturating_add((384_000 as Weight).saturating_mul(r as Weight))
			// Standard Error: 11_000
			.saturating_add((943_000 as Weight).saturating_mul(x as Weight))
=======
		(42_543_000 as Weight)
			// Standard Error: 86_000
			.saturating_add((767_000 as Weight).saturating_mul(r as Weight))
			// Standard Error: 12_000
			.saturating_add((1_008_000 as Weight).saturating_mul(x as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Identity SubsOf (r:1 w:1)
	// Storage: Identity IdentityOf (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	// Storage: Identity SuperOf (r:0 w:32)
<<<<<<< HEAD
	fn kill_identity(r: u32, s: u32, x: u32, ) -> Weight {
		(93_975_000 as Weight)
			// Standard Error: 99_000
			.saturating_add((225_000 as Weight).saturating_mul(r as Weight))
			// Standard Error: 15_000
			.saturating_add((2_291_000 as Weight).saturating_mul(s as Weight))
			// Standard Error: 15_000
			.saturating_add((36_000 as Weight).saturating_mul(x as Weight))
=======
	fn kill_identity(r: u32, s: u32, _x: u32, ) -> Weight {
		(98_533_000 as Weight)
			// Standard Error: 110_000
			.saturating_add((350_000 as Weight).saturating_mul(r as Weight))
			// Standard Error: 16_000
			.saturating_add((2_304_000 as Weight).saturating_mul(s as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(s as Weight)))
	}
	// Storage: Identity IdentityOf (r:1 w:0)
	// Storage: Identity SuperOf (r:1 w:1)
	// Storage: Identity SubsOf (r:1 w:1)
	fn add_sub(s: u32, ) -> Weight {
<<<<<<< HEAD
		(70_100_000 as Weight)
			// Standard Error: 13_000
			.saturating_add((298_000 as Weight).saturating_mul(s as Weight))
=======
		(70_158_000 as Weight)
			// Standard Error: 9_000
			.saturating_add((286_000 as Weight).saturating_mul(s as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Identity IdentityOf (r:1 w:0)
	// Storage: Identity SuperOf (r:1 w:1)
	fn rename_sub(s: u32, ) -> Weight {
<<<<<<< HEAD
		(21_070_000 as Weight)
			// Standard Error: 22_000
			.saturating_add((242_000 as Weight).saturating_mul(s as Weight))
=======
		(21_062_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((192_000 as Weight).saturating_mul(s as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Identity IdentityOf (r:1 w:0)
	// Storage: Identity SuperOf (r:1 w:1)
	// Storage: Identity SubsOf (r:1 w:1)
	fn remove_sub(s: u32, ) -> Weight {
<<<<<<< HEAD
		(71_978_000 as Weight)
			// Standard Error: 13_000
			.saturating_add((333_000 as Weight).saturating_mul(s as Weight))
=======
		(72_930_000 as Weight)
			// Standard Error: 15_000
			.saturating_add((259_000 as Weight).saturating_mul(s as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Identity SuperOf (r:1 w:1)
	// Storage: Identity SubsOf (r:1 w:1)
	fn quit_sub(s: u32, ) -> Weight {
<<<<<<< HEAD
		(47_499_000 as Weight)
			// Standard Error: 13_000
			.saturating_add((292_000 as Weight).saturating_mul(s as Weight))
=======
		(46_216_000 as Weight)
			// Standard Error: 8_000
			.saturating_add((323_000 as Weight).saturating_mul(s as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}
