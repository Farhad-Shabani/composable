
//! Autogenerated weights for `collective`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
<<<<<<< HEAD
//! DATE: 2022-07-28, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
=======
//! DATE: 2022-07-15, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
>>>>>>> instrumental-duplicate-for-pablo
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dali-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/composable
// benchmark
// pallet
// --chain=dali-dev
// --execution=wasm
// --wasm-execution=compiled
// --wasm-instantiation-strategy=legacy-instance-reuse
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=20
// --output=runtime/dali/src/weights
// --log
// error

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `collective`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> collective::WeightInfo for WeightInfo<T> {
	// Storage: Council Members (r:1 w:1)
	// Storage: Council Proposals (r:1 w:0)
	// Storage: Council Voting (r:100 w:100)
	// Storage: Council Prime (r:0 w:1)
	fn set_members(m: u32, n: u32, p: u32, ) -> Weight {
		(0 as Weight)
<<<<<<< HEAD
			// Standard Error: 59_000
			.saturating_add((20_731_000 as Weight).saturating_mul(m as Weight))
			// Standard Error: 59_000
			.saturating_add((251_000 as Weight).saturating_mul(n as Weight))
			// Standard Error: 59_000
			.saturating_add((27_137_000 as Weight).saturating_mul(p as Weight))
=======
			// Standard Error: 42_000
			.saturating_add((20_570_000 as Weight).saturating_mul(m as Weight))
			// Standard Error: 42_000
			.saturating_add((26_890_000 as Weight).saturating_mul(p as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(p as Weight)))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(p as Weight)))
	}
	// Storage: Council Members (r:1 w:0)
	// Storage: CallFilter DisabledCalls (r:1 w:0)
	fn execute(b: u32, m: u32, ) -> Weight {
<<<<<<< HEAD
		(34_384_000 as Weight)
=======
		(34_592_000 as Weight)
>>>>>>> instrumental-duplicate-for-pablo
			// Standard Error: 0
			.saturating_add((3_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 0
			.saturating_add((58_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
	}
	// Storage: Council Members (r:1 w:0)
	// Storage: Council ProposalOf (r:1 w:0)
	// Storage: CallFilter DisabledCalls (r:1 w:0)
	fn propose_execute(b: u32, m: u32, ) -> Weight {
<<<<<<< HEAD
		(39_742_000 as Weight)
			// Standard Error: 0
			.saturating_add((3_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 1_000
			.saturating_add((95_000 as Weight).saturating_mul(m as Weight))
=======
		(38_472_000 as Weight)
			// Standard Error: 0
			.saturating_add((3_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 1_000
			.saturating_add((97_000 as Weight).saturating_mul(m as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
	}
	// Storage: Council Members (r:1 w:0)
	// Storage: Council ProposalOf (r:1 w:1)
	// Storage: Council Proposals (r:1 w:1)
	// Storage: Council ProposalCount (r:1 w:1)
	// Storage: Council Voting (r:0 w:1)
	fn propose_proposed(b: u32, m: u32, p: u32, ) -> Weight {
<<<<<<< HEAD
		(38_937_000 as Weight)
			// Standard Error: 0
			.saturating_add((18_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 5_000
			.saturating_add((50_000 as Weight).saturating_mul(m as Weight))
			// Standard Error: 5_000
			.saturating_add((560_000 as Weight).saturating_mul(p as Weight))
=======
		(39_623_000 as Weight)
			// Standard Error: 0
			.saturating_add((15_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 3_000
			.saturating_add((81_000 as Weight).saturating_mul(m as Weight))
			// Standard Error: 3_000
			.saturating_add((473_000 as Weight).saturating_mul(p as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Council Members (r:1 w:0)
	// Storage: Council Voting (r:1 w:1)
	fn vote(m: u32, ) -> Weight {
<<<<<<< HEAD
		(65_018_000 as Weight)
			// Standard Error: 5_000
			.saturating_add((191_000 as Weight).saturating_mul(m as Weight))
=======
		(62_095_000 as Weight)
			// Standard Error: 5_000
			.saturating_add((150_000 as Weight).saturating_mul(m as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Council Voting (r:1 w:1)
	// Storage: Council Members (r:1 w:0)
	// Storage: Council Proposals (r:1 w:1)
	// Storage: Council ProposalOf (r:0 w:1)
	fn close_early_disapproved(m: u32, p: u32, ) -> Weight {
<<<<<<< HEAD
		(64_067_000 as Weight)
			// Standard Error: 13_000
			.saturating_add((34_000 as Weight).saturating_mul(m as Weight))
			// Standard Error: 12_000
			.saturating_add((447_000 as Weight).saturating_mul(p as Weight))
=======
		(51_092_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((161_000 as Weight).saturating_mul(m as Weight))
			// Standard Error: 3_000
			.saturating_add((397_000 as Weight).saturating_mul(p as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Council Voting (r:1 w:1)
	// Storage: Council Members (r:1 w:0)
	// Storage: Council ProposalOf (r:1 w:1)
	// Storage: CallFilter DisabledCalls (r:1 w:0)
	// Storage: Council Proposals (r:1 w:1)
	fn close_early_approved(b: u32, m: u32, p: u32, ) -> Weight {
<<<<<<< HEAD
		(63_274_000 as Weight)
			// Standard Error: 0
			.saturating_add((15_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 5_000
			.saturating_add((180_000 as Weight).saturating_mul(m as Weight))
			// Standard Error: 5_000
			.saturating_add((646_000 as Weight).saturating_mul(p as Weight))
=======
		(73_684_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((3_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 11_000
			.saturating_add((181_000 as Weight).saturating_mul(m as Weight))
			// Standard Error: 11_000
			.saturating_add((562_000 as Weight).saturating_mul(p as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Council Voting (r:1 w:1)
	// Storage: Council Members (r:1 w:0)
	// Storage: Council Prime (r:1 w:0)
	// Storage: Council Proposals (r:1 w:1)
	// Storage: Council ProposalOf (r:0 w:1)
	fn close_disapproved(m: u32, p: u32, ) -> Weight {
<<<<<<< HEAD
		(57_404_000 as Weight)
			// Standard Error: 5_000
			.saturating_add((160_000 as Weight).saturating_mul(m as Weight))
			// Standard Error: 5_000
			.saturating_add((457_000 as Weight).saturating_mul(p as Weight))
=======
		(60_992_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((131_000 as Weight).saturating_mul(m as Weight))
			// Standard Error: 3_000
			.saturating_add((373_000 as Weight).saturating_mul(p as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Council Voting (r:1 w:1)
	// Storage: Council Members (r:1 w:0)
	// Storage: Council Prime (r:1 w:0)
	// Storage: Council ProposalOf (r:1 w:1)
	// Storage: CallFilter DisabledCalls (r:1 w:0)
	// Storage: Council Proposals (r:1 w:1)
	fn close_approved(b: u32, m: u32, p: u32, ) -> Weight {
<<<<<<< HEAD
		(77_768_000 as Weight)
			// Standard Error: 0
			.saturating_add((9_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 6_000
			.saturating_add((179_000 as Weight).saturating_mul(m as Weight))
			// Standard Error: 6_000
			.saturating_add((640_000 as Weight).saturating_mul(p as Weight))
=======
		(70_652_000 as Weight)
			// Standard Error: 0
			.saturating_add((13_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 4_000
			.saturating_add((174_000 as Weight).saturating_mul(m as Weight))
			// Standard Error: 4_000
			.saturating_add((541_000 as Weight).saturating_mul(p as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Council Proposals (r:1 w:1)
	// Storage: Council Voting (r:0 w:1)
	// Storage: Council ProposalOf (r:0 w:1)
	fn disapprove_proposal(p: u32, ) -> Weight {
<<<<<<< HEAD
		(33_200_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((506_000 as Weight).saturating_mul(p as Weight))
=======
		(34_350_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((448_000 as Weight).saturating_mul(p as Weight))
>>>>>>> instrumental-duplicate-for-pablo
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
}
